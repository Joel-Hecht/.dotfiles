#!/bin/bash

OPTIND=1
subdirs="./"
depth=0

hidden=no
full=no
tab=no
infinite=yes

# help
if [[ $# -eq 0 || $1 == "--help" ]]; then
	echo "breadth first recursive cd"
	echo "syntax: bfs [OPTION] dirname [maxdepth (default=5)]"
	echo "options:"
	echo "\t-h: explore hidden directories (also bfsh)"
	echo "\t-r: start from root (also bfsr)"
	echo "\t-f: explore fully and go to last used match"
	echo "\t-t: find directory starting with argument"
	echo "\t-i: infinite depth"
	return 0
fi

# options
while getopts "hrfti" opt; do
	case $opt in
		h) hidden=yes ;;
		r) subdirs="$HOME/" ;;
		f) full=yes ;;
		t) tab=yes ;;
		i) infinite=yes ;;
		\?) echo "Invalid option -$OPTARG" >&2
			return 1 ;;
	esac
done

shift $(( OPTIND - 1 ))

# default maxdepth
if [[ $# -gt 1 ]]; then
	maxdepth=$2
	if ! [[ "$maxdepth" =~ ^[0-9]+$ ]]; then
		echo "maxdepth (arg 2) must be a number" >&2
		return 1
	fi
else
	maxdepth=5
fi
if [[ $infinite == yes ]]; then
	if [[ $full == no ]] ; then
		maxdepth=999
	fi
fi

# -f 
if [[ $full == yes ]]; then
	[[ $tab == yes ]] && search_term="(^|/)$1[^/]*/$" || search_term="(^|/)$1/$"
	current="$( pwd )"
	cd "$subdirs"
	for (( i=1; i<=$maxdepth; i++ )); do
		for (( j=0; j<$i; j++ )); do
			[[ $hidden == yes ]] && subdirs+="?(.)*/" || subdirs+="*/"
		done
		subdirs+=" "
	done

	top_dir=$( ls -dt $subdirs --color=no 2> /dev/null | egrep "$search_term" | head -n 1 )
	if [[ -n "$top_dir" ]]; then
		cd "$top_dir"
		return 0
	fi
	echo "failed to find!" >&2
	cd "$current"
	return 1
fi

[[ $tab == yes ]] && search_term="/$1.*/" || search_term="/$1/"

# main loop
while [[ $depth -lt $maxdepth ]]; do
	[[ $hidden == yes ]] && subdirs+="?(.)*/" || subdirs+="*/"

	depth=$(( $depth + 1))

	# list all targets
	targets=$( ls -dt $subdirs --color=no 2> /dev/null )
	if [[ -z $targets ]]; then
		echo "no more subdirectories at depth=$depth" >&2
		return 2 
	fi

	# look for directory
	matched_dir=$( egrep "$search_term" <<< $targets )
	if [[ -n "$matched_dir" ]]; then
		cd "$( head -n 1 <<< "$matched_dir" )"
		return 0
	fi
done

echo "hit maxdepth ($maxdepth)!" >&2
return 1 
